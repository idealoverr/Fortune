name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: 
  push:
    branches:
     - 'v[0-9]+.[0-9]+'
jobs:
    commit-message:
      runs-on: ubuntu-latest
      name: define_message_vali
      steps:
        - uses: actions/checkout@v2
        - id: Check
          uses: uptownaravi/verify-commit-message-action@v2 #While we commit our code adding required commit message helps others understand the code and why its being added. This GitHub Action will help in validating the commit message as per the regex value passed The job will pass if the regex matches or exits with return code 1
          with: 
            regex: '^(?!#NORUN)' #The pipeline should not run if the commit message starts with #NORUN
    succcessful-scan:
        runs-on: ubuntu-latest
        name: scanner
        needs: commit-message #needs is a key, it can present anything you need
        if: success()
        steps: 
          - name: Checkout
            uses: actions/checkout@v2

          - name: Run Trivy vulnerability scanner
            id: trivy
            uses: aquasecurity/trivy-action@master
            with: 
              scan-type: 'fs'
              ignore-unfixed: true
              format: 'table'
              exit-code: '1'
              vuln-type: 'os,library'
              output: 'text.txt'
              severity: 'CRITICAL,HIGH'
          
    failed-scan:
      runs-on: ubuntu-latest
      needs: succcessful-scan
      name: failed to scan
      if: failure()
      steps:
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
              SLACK_CHANNEL: general
              SLACK_COLOR: ${{ job.status }} 
              SLACK_ICON: https://github.com/rtCamp.png?size=48
              SLACK_MESSAGE: "failed trivy scan, author:Liu Yangxin"
              SLACK_WEBHOOK: ${{ secrets.TEST_WEBHOOK}}
        
        - name: Send txt scan report
          if: failure()
          uses: MeilCli/slack-upload-file@v3
          with:
           slack_token: ${{ secrets.TEST_TOKEN }}
           channel_id: ${{ secrets.TEST_CHANNEL_ID }}
           file_path: 'text.txt'
           initial_comment: 'Scan report by Liu Yangxin'
    docker:
      runs-on: ubuntu-latest
      needs: succcessful-scan
      if: success()
      permissions:
        contents: read
        packages: write
        id-token: write
      steps:
        - name: set up qemu
          uses: docker/setup-qemu-action@v3
        - name: set up docker buid
          uses: docker/setup-buildx-action@v3
        - name: login
          uses: docker/login-action@v3
          with: 
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v5
          with: 
            push: true
            tags: liuyangxin/newone:${{ github.sha }}
        - name: Install cosign
          uses: sigstore/cosign-installer@v3.1.1
          with: 
            cosign-release: 'v2.2.0'
        - name: Sign Image
          run: |
              cosign sign --yes --key env://COSIGN_PRIVATE_KEY liuyangxin/newone:${{ github.sha }}
          env: 
            COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        - name: Slack Notification
          uses: rtCamp/action-slack-notify@v2
          env:
                SLACK_CHANNEL: general
                SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
                SLACK_ICON: https://github.com/rtCamp.png?size=48
                SLACK_MESSAGE: "Name:Liu Yangxin\nMatribulation:e1221833\nEmail:yangxinliuaz@gmail.com\nGit:https://github.com/idealoverr/Fortune\nImage:https://hub.docker.com/repository/docker/liuyangxin/newone/general"
                SLACK_TITLE: Message 
                SLACK_WEBHOOK: ${{ secrets.TEST_WEBHOOK}}
          



      

           









            